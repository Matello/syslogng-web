{"name":"Syslogng-web","tagline":"Webapp which shows syslog-ng logs from mongodb sources with realtime search capabilities","body":"# syslogng-web\r\n\r\nWebapp which shows syslog-ng logs from mongodb sources\r\n\r\n![screenshot for 0.0.5](https://raw.github.com/nlaplante/syslogng-web/master/resources/syslogng-web-0.0.5.png \"Screenshot 0.0.5\")\r\n\r\n## Installing syslogng-web\r\n\r\nFollow the instructions below to setup a fully working copy of **syslogng-web** on your host.\r\n\r\n### Configuring syslog-ng\r\n\r\nFor **syslogng-web** to work, it is necessary to enable MongoDB support. Ensure your syslog-ng copy\r\nsupports MongoDB before continuing.\r\n\r\nYou need to configure a mongodb destination and map it to a log source. Open up */etc/syslog-ng/syslog-ng.conf* \r\nand add the following lines:\r\n\r\n```\r\ndestination mongodb { mongodb(); }\r\nlog { source(src); destination(mongodb); };\r\n```\r\n\r\nAdditional options are available for the mongodb configuration. Please read \r\n[syslog-ng's documentation](https://www.balabit.com/sites/default/files/documents/syslog-ng-ose-3.3-guides/en/syslog-ng-ose-v3.3-guide-admin-en/html/configuring_destinations_mongodb.html) \r\nfor further information.\r\n\r\nWhen you are done editing */etc/syslog-ng/syslog-ng.conf*, restart the syslog-ng service.\r\n\r\n### Configuring the database\r\n\r\nBy default the collection syslog-ng creates in MongoDB is not capped. However it needs to be for **syslogng-web** to work. To\r\nconvert the existing collection to capped, issue the following statements in a mongodb shell:\r\n\r\n```\r\nuse syslog\r\ndb.runCommand({\r\n    convertToCapped: 'messages'\r\n    size: 100000\r\n    });\r\n```\r\n\r\nThis will make the *messages* collection capped at 100 000 bytes. Use a size that better suits your need if you want.\r\n\r\n### Installing syslogng-web\r\n\r\nNext you have to install a copy of **syslogng-web** on your server:\r\n\r\n```\r\ngit clone https://github.com/nlaplante/syslogng-web.git\r\ncd syslogng-web\r\n```\r\n\r\nSince **syslogng-web** is a node.js application, ensure you have the latest node.js version installed on your server. Then,\r\ninstall the dependencies:\r\n\r\n```\r\nnpm install\r\n```\r\n\r\nNext you need to install client libraries. This is done using [Bower](https://github.com/bower/bower). \r\nIf you don't have it already, install it using:\r\n\r\n```\r\nnpm install -g bower\r\n```\r\n\r\nThen, install the required client libraries with\r\n\r\n```\r\nbower install\r\n```\r\n\r\n### Configuration\r\n\r\nNext, you need to tell **syslogng-web** how to connect to the MongoDB databases which holds the log messages. \r\nBy default, the mongodb driver for syslog-ng creates a database named *syslog* and stores the log messages\r\nin a collection called *messages*. If your setup is different, edit **config.json** and replace the host, \r\nport and/or collection configuration properties to suit your setup.\r\n\r\n### Running\r\n\r\nRunning **syslogng-web** is as simple as running any other node.js application:\r\n\r\n```\r\nnode app.js\r\n```\r\n\r\nTo test if everything is working correctly, open a brower at *http://your-server:3000*. The log messages should appear \r\nshortly after. It is not necessary to reload the page to see changes, as **syslogng-web** uses socket.io to update\r\nits content as it gets logged.\r\n\r\n#### RC system integration\r\n\r\n**syslogng-web** can be integrated in various RC systems. Since my main development machine is Gentoo Linux based,\r\nI included an init script for Gentoo Linux. To install the init script:\r\n\r\n```bash\r\nsudo cp -rv resources/sysinit/gentoo/* /etc\r\n```\r\n\r\nNext, edit */etc/conf.d/syslogng-web* and modify the variables in there to suit your configuration. The file is\r\nself-explaining so no need to document it here. It only assumes you cloned **syslogng-web** into */usr/local/share*.\r\n\r\n#### Running with nginx\r\n\r\nIt is possible to run syslogng-web behind a reverse proxy like nginx. Here's a configuration sample for nginx:\r\n\r\n```\r\nserver {\r\n    listen your_server_ip;\r\n    server_name domain_name_for_syslogng_web;\r\n\r\n    access_log /path/to/access/log main;\r\n    error_log /path/to/error/log info;\r\n\r\n    location / {\r\n            proxy_pass http://localhost:3000;\r\n            proxy_set_header X-Real-IP $remote_addr;\r\n            proxy_set_header Host $host;\r\n    }\r\n\r\n    location /socket.io/ {\r\n            proxy_pass http://localhost:3000/socket.io/;\r\n            proxy_set_header X-Real-IP $remote_addr;\r\n            proxy_set_header Host $host;\r\n            proxy_http_version 1.1;\r\n            proxy_set_header Upgrade $http_upgrade;\r\n            proxy_set_header Connection \"upgrade\";\r\n    }\r\n}\r\n```\r\n\r\n","google":"UA-46803844-1","note":"Don't delete this file! It's used internally to help with page regeneration."}